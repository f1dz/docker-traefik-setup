services:
  reverse-proxy:
    image: traefik:latest
    container_name: traefik
    security_opt:
      - no-new-privileges:true
    restart: always
    ports:
      - "${TRAEFIK_PORT}:80"
      - "${TRAEFIK_SECURE_PORT}:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./config/traefik_dynamic.yml:/etc/traefik/traefik_dynamic.yml:ro
      - ./data/logs/access.log:/data/logs/access.log
      - ./data/logs/traefik.log:/data/logs/traefik.log
      - ./certs:/etc/certs:ro
      - ./letsencrypt:/letsencrypt
      - ./acme.json:/letsencrypt/acme.json
    environment:
      - TRAEFIK_DOMAIN
      - TRAEFIK_USER
    networks:
      - proxy
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    labels:
      - "traefik.http.routers.prometheus.rule=Host(`${PROM_DOMAIN}`)"
      - "traefik.port=9090"
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.frontend.passHostHeader=false"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.http.routers.prometheus.tls=true"
    networks:
      - proxy

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana-storage:/var/lib/grafana
    labels:
      - "traefik.http.routers.grafana.rule=Host(`${GRAFANA_DOMAIN}`)"
      - "traefik.port=3000"
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.frontend.passHostHeader=false"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.http.routers.grafana.tls=true"
    networks:
      - proxy

networks:
  proxy:
    external: true
    name: proxy

volumes:
  prometheus: {}
  grafana-storage: {}